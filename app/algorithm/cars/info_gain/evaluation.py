RATING = 0 # Holds the index of rating in user preference array
OPTIMUM = 3.5 # Optimum rating for recommendation > 3.5

def precision(user, recommendations, udb):
    """
    recommendations: generated by get_recommendations
    udb: test udb
    """
    all = len(recommendations) + 0.00000000000000000001
    tp = 0
    for (x, y) in recommendations:
        for movie in udb[user].keys():
            if movie == y and (round(x) - 1 <= udb[user][movie][RATING] <= round(x) + 1):
                tp += 1
    #print tp, all
    return tp/float(all)

def recall(user, recommendations, udb):
    tp = 0
    good_movies = 0
    for movie in udb[user].keys():
        if OPTIMUM + 1 >= udb[user][movie][RATING] >= OPTIMUM - 1:
            good_movies += 1
            for (x, y) in recommendations:
                if movie == y:
                    tp += 1
    return tp/float(good_movies)

def f1score(precision, recall):
    if precision + recall == 0:
        return 0
    return 2 * (precision * recall)/(precision + recall)